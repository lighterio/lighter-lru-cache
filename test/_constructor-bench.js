'use strict'
/* global bench it is */
var packages = require('./.bench-packages')

bench('Constructing 100 cache objects', function () {
  var cache
  is.undefined(cache)
  packages.forEach(function (name, Cache) {
    it(name, function () {
      cache = new Cache()
      cache = new Cache()
      cache = new Cache()
      cache = new Cache()
      cache = new Cache()
      cache = new Cache()
      cache = new Cache()
      cache = new Cache()
      cache = new Cache()
      cache = new Cache()
      cache = new Cache()
      cache = new Cache()
      cache = new Cache()
      cache = new Cache()
      cache = new Cache()
      cache = new Cache()
      cache = new Cache()
      cache = new Cache()
      cache = new Cache()
      cache = new Cache()
      cache = new Cache()
      cache = new Cache()
      cache = new Cache()
      cache = new Cache()
      cache = new Cache()
      cache = new Cache()
      cache = new Cache()
      cache = new Cache()
      cache = new Cache()
      cache = new Cache()
      cache = new Cache()
      cache = new Cache()
      cache = new Cache()
      cache = new Cache()
      cache = new Cache()
      cache = new Cache()
      cache = new Cache()
      cache = new Cache()
      cache = new Cache()
      cache = new Cache()
      cache = new Cache()
      cache = new Cache()
      cache = new Cache()
      cache = new Cache()
      cache = new Cache()
      cache = new Cache()
      cache = new Cache()
      cache = new Cache()
      cache = new Cache()
      cache = new Cache()
      cache = new Cache()
      cache = new Cache()
      cache = new Cache()
      cache = new Cache()
      cache = new Cache()
      cache = new Cache()
      cache = new Cache()
      cache = new Cache()
      cache = new Cache()
      cache = new Cache()
      cache = new Cache()
      cache = new Cache()
      cache = new Cache()
      cache = new Cache()
      cache = new Cache()
      cache = new Cache()
      cache = new Cache()
      cache = new Cache()
      cache = new Cache()
      cache = new Cache()
      cache = new Cache()
      cache = new Cache()
      cache = new Cache()
      cache = new Cache()
      cache = new Cache()
      cache = new Cache()
      cache = new Cache()
      cache = new Cache()
      cache = new Cache()
      cache = new Cache()
      cache = new Cache()
      cache = new Cache()
      cache = new Cache()
      cache = new Cache()
      cache = new Cache()
      cache = new Cache()
      cache = new Cache()
      cache = new Cache()
      cache = new Cache()
      cache = new Cache()
      cache = new Cache()
      cache = new Cache()
      cache = new Cache()
      cache = new Cache()
      cache = new Cache()
      cache = new Cache()
      cache = new Cache()
      cache = new Cache()
      cache = new Cache()
      cache = new Cache()
    })
  })
})
